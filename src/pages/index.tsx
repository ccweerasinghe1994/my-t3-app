import { type NextPage } from "next";
import Head from "next/head";
import { UserButton, useUser } from "@clerk/nextjs";
import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";
import type { FC } from "react";
import LoaderSpinner from "~/components/loader.component";

dayjs.extend(relativeTime);
type PostWithUser = RouterOutputs["post"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div
      className="flex items-center gap-3 border-b border-slate-200 p-8 "
      key={post.id}
    >
      <Image
        className="h-10 w-10 rounded-full"
        src={author.profilePicture}
        alt=""
        width={56}
        height={56}
      />
      <div className="flex flex-col">
        <div>
          <span>
            @{author.username} Â· {dayjs(post.createdAt).fromNow()}
          </span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
};

const CreatePostWizard: FC = () => {
  // user data

  const { user } = useUser();

  // if user is not logged in
  if (!user) {
    return null;
  }

  return (
    <div className="flex w-full gap-3 pl-4 pt-4">
      <Image
        className="h-10 w-10 rounded-full"
        src={user.profileImageUrl}
        alt="profile image"
        width={56}
        height={56}
      />
      <input
        type="text"
        placeholder="type some emojis"
        className="grow bg-transparent outline-none"
      />
    </div>
  );
};
const Feed = () => {
  const { data, isLoading: postLoading } = api.post.getAll.useQuery();
  if (postLoading) {
    return <LoaderSpinner size={10} />;
  }

  // no data return empty
  if (!data) {
    return <div>Something went wrong</div>;
  }
  return (
    <div className="flex flex-col">
      {data?.map(({ post, author }) => (
        <PostView key={post.id} post={post} author={author} />
      ))}
    </div>
  );
};
const Home: NextPage = () => {
  const { isLoaded: userLoaded } = useUser();
  api.post.getAll.useQuery();

  if (!userLoaded) return <div />;

  // no data return empty

  return (
    <>
      <Head>
        <title>chirp</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className="flex justify-between bg-gray-100 py-3 pr-5  dark:bg-gray-800">
        <span className="pl-5 text-lg font-semibold text-white">Chirp</span>
        <UserButton />
      </header>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-400  bg-opacity-30 md:max-w-2xl ">
          <CreatePostWizard />
          <Feed />
        </div>
      </main>
    </>
  );
};

export default Home;
